
// import { NextResponse } from "next/server";

// export const runtime = "nodejs";

// export async function POST(req: Request) {
//   try {
//     const { message } = await req.json();
//     console.log("Message received:", message);

//     const apiKey = process.env.OPENAI_API_KEY;
//     if (!apiKey) {
//       console.error(" Missing OPENAI_API_KEY");
//       return NextResponse.json({ reply: "Server misconfigured" }, { status: 500 });
//     }

//     const res = await fetch("https://api.openai.com/v1/chat/completions", {
//       method: "POST",
//       headers: {
//         "Content-Type": "application/json",
//         Authorization: `Bearer ${apiKey}`,
//       },
//       body: JSON.stringify({
//         model: "gpt-4o-mini",
//         messages: [{ role: "user", content: message }],
//       }),
//     });

//     const data = await res.json();
//     console.log("OpenAI response:", res.status, data);

//     if (!res.ok) {
//       console.error("OpenAI API Error:", data);
//       return NextResponse.json(
//         { reply: `OpenAI Error: ${data.error?.message || "Unknown error"}` },
//         { status: res.status }
//       );
//     }

//     const reply = data.choices?.[0]?.message?.content || "No response found.";
//     return NextResponse.json({ reply });
//   } catch (error) {
//     console.error("Server error:", error);
//     return NextResponse.json({ reply: "Unexpected server error" }, { status: 500 });
//   }
// }











// import { NextResponse } from "next/server";

// export const runtime = "nodejs";

// export async function POST(req: Request) {
//   try {
//     const { message } = await req.json();
//     console.log("Message received:", message);

//     const apiKey = process.env.OPENAI_API_KEY;

//     if (!apiKey) {

//       const offlineReply = `
// üáßüá© **‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ:**
// ‡¶¨‡¶∞‡ßç‡¶§‡¶Æ‡¶æ‡¶®‡ßá "Mini App Hub (MAH)"-‡¶è‡¶∞ AI ‡¶∏‡ßá‡¶¨‡¶æ (OpenAI Integration) ‡¶Ü‡¶™‡¶æ‡¶§‡¶§ ‡¶∏‡ßç‡¶•‡¶ó‡¶ø‡¶§ ‡¶∞‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§ 
// ‡¶è‡¶á ‡¶´‡¶ø‡¶ö‡¶æ‡¶∞‡¶ü‡¶ø ‡¶ö‡¶æ‡¶≤‡ßÅ ‡¶ï‡¶∞‡¶§‡ßá ‡¶°‡ßá‡¶≠‡ßá‡¶≤‡¶™‡¶æ‡¶∞ (Samiul Islam - Owner of MAH) ‡¶¨‡¶ø‡¶≤‡¶ø‡¶Ç ‡¶∏‡¶Æ‡ßç‡¶™‡¶®‡ßç‡¶® ‡¶ï‡¶∞‡¶≤‡ßá ‡¶è‡¶ü‡¶ø ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶∏‡¶ï‡ßç‡¶∞‡¶ø‡¶Ø‡¶º ‡¶π‡¶¨‡ßá‡•§ 
// ‡¶Ü‡¶™‡¶®‡¶ø ‡¶è‡¶á ‡¶Æ‡ßÅ‡¶π‡ßÇ‡¶∞‡ßç‡¶§‡ßá Firebase ‡¶≤‡¶æ‡¶á‡¶≠ ‡¶ö‡ßç‡¶Ø‡¶æ‡¶ü ‡¶¨‡¶æ "History" ‡¶∏‡ßá‡¶ï‡¶∂‡¶® ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶™‡ßÇ‡¶∞‡ßç‡¶¨‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶®-‡¶â‡¶§‡ßç‡¶§‡¶∞ ‡¶¶‡ßá‡¶ñ‡¶§‡ßá ‡¶¨‡¶æ ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ‡¶∞ ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶® ‡¶ñ‡ßÅ‡¶Å‡¶ú‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá‡¶®‡•§ 
// ‡¶¶‡ßÅ‡¶É‡¶ñ‡¶ø‡¶§, AI Assistant ‡¶è‡¶ñ‡¶® ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶®‡ßá‡¶∞ ‡¶â‡¶§‡ßç‡¶§‡¶∞ ‡¶¶‡¶ø‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶¨‡ßá ‡¶®‡¶æ‡•§

// ---

// üá∫üá∏ **English:**
// Currently, the AI service of "Mini App Hub (MAH)" (OpenAI Integration) is temporarily suspended. 
// The feature will be reactivated once the developer (Samiul Islam - Owner of MAH) completes the billing. 
// Meanwhile, you can use the Firebase live chat or check the "History" section to see previous Q&A or find solutions. 
// We apologize, AI Assistant cannot respond to your questions at the moment.
// `;

//       return NextResponse.json({ reply: offlineReply }, { status: 200 });
//     }

//     // ‚úÖ API key ‡¶Ü‡¶õ‡ßá, AI ‡¶ï‡¶≤ ‡¶ï‡¶∞‡¶æ
//     const res = await fetch("https://api.openai.com/v1/chat/completions", {
//       method: "POST",
//       headers: {
//         "Content-Type": "application/json",
//         Authorization: `Bearer ${apiKey}`,
//       },
//       body: JSON.stringify({
//         model: "gpt-3.5-turbo",
//         messages: [{ role: "user", content: message }],
//       }),
//     });

//     const data = await res.json();
//     console.log("OpenAI response status:", res.status, data);

//     if (!res.ok) {
//       return NextResponse.json(
//         { reply: "AI service temporarily unavailable. Please try later." },
//         { status: res.status }
//       );
//     }

//     const reply = data.choices?.[0]?.message?.content || "No response found.";
//     return NextResponse.json({ reply });
//   } catch (error) {
//     console.error("Server error:", error);
//     return NextResponse.json(
//       { reply: "Unexpected server error occurred." },
//       { status: 500 }
//     );
//   }
// }








import { NextResponse } from "next/server";

export const runtime = "nodejs";

export async function POST(req: Request) {
  try {
    const { message } = await req.json();
    console.log("User wrote:", message);


    const offlineReply = `

‡¶¨‡¶∞‡ßç‡¶§‡¶Æ‡¶æ‡¶®‡ßá "Mini Apps Hub (MAH)"-‡¶è‡¶∞ AI ‡¶∏‡ßá‡¶¨‡¶æ (OpenAI Integration) ‡¶Ü‡¶™‡¶æ‡¶§‡¶§ ‡¶∏‡ßç‡¶•‡¶ó‡¶ø‡¶§ ‡¶∞‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§ 
‡¶è‡¶á ‡¶´‡¶ø‡¶ö‡¶æ‡¶∞‡¶ü‡¶ø ‡¶ö‡¶æ‡¶≤‡ßÅ ‡¶ï‡¶∞‡¶§‡ßá ‡¶°‡ßá‡¶≠‡ßá‡¶≤‡¶™‡¶æ‡¶∞ (Sameul Islam - Owner of MAH) ‡¶¨‡¶ø‡¶≤‡¶ø‡¶Ç ‡¶∏‡¶Æ‡ßç‡¶™‡¶®‡ßç‡¶® ‡¶ï‡¶∞‡¶≤‡ßá ‡¶è‡¶ü‡¶ø ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶∏‡¶ï‡ßç‡¶∞‡¶ø‡¶Ø‡¶º ‡¶π‡¶¨‡ßá‡•§ 
‡¶Ü‡¶™‡¶®‡¶ø Firebase ‡¶≤‡¶æ‡¶á‡¶≠ ‡¶ö‡ßç‡¶Ø‡¶æ‡¶ü ‡¶¨‡¶æ "History" ‡¶∏‡ßá‡¶ï‡¶∂‡¶® ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶™‡ßÇ‡¶∞‡ßç‡¶¨‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶®-‡¶â‡¶§‡ßç‡¶§‡¶∞ ‡¶¶‡ßá‡¶ñ‡¶§‡ßá ‡¶¨‡¶æ ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ‡¶∞ ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶® ‡¶ñ‡ßÅ‡¶Å‡¶ú‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá‡¶®‡•§ 
‡¶¶‡ßÅ‡¶É‡¶ñ‡¶ø‡¶§, AI Assistant ‡¶è‡¶ñ‡¶® ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶®‡ßá‡¶∞ ‡¶â‡¶§‡ßç‡¶§‡¶∞ ‡¶¶‡¶ø‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶¨‡ßá ‡¶®‡¶æ‡•§ 
-------------------
-------------------
-------------------

Currently, the AI service of "Mini Apps Hub (MAH)" (OpenAI Integration) is temporarily suspended. 
The feature will be reactivated once the developer (Sameul Islam - Owner of MAH) completes the billing. 
Meanwhile, you can use Firebase live chat or check the "History" section to see previous Q&A. 
We apologize, AI Assistant cannot respond to your questions at the moment.
`;

    return NextResponse.json({ reply: offlineReply }, { status: 200 });
  } catch (error) {
    console.error("Server error:", error);
    return NextResponse.json(
      { reply: "Unexpected server error occurred." },
      { status: 500 }
    );
  }
}
